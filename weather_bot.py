import config
import pyowm
import logging
import telebot as t
from telebot import types
import re
from datetime import datetime
import requests

# –õ–æ–≥ —Å–æ–±—ã—Ç–∏–π
# t.logger.setLevel(logging.DEBUG)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ OpenWeatherApi –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
owm = pyowm.OWM(config.OWM_API_KEY, config.owm_config)
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ pyTelegramBotAPI –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
bot = t.TeleBot(config.TELEGRAM_BOT_KEY)
manager = owm.weather_manager()


# –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
class Message(object):
	def __init__(self, text, **options):
		self.text = text
		self.options = options


# –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º —Ç–µ–≥–æ–≤ HTML
class HTML(Message):
	def __init__(self, text, **options):
		super(HTML, self).__init__(text, parse_mode="HTML", **options)


# –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º **, __, ``
class Markdown(Message):
	def __init__(self, text, **options):
		super(Markdown, self).__init__(text, parse_mode='Markdown', **options)


@bot.message_handler(commands=['start'])
def send_message(command):
	# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ, —Ç–æ –±–æ—Ç –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –µ–≥–æ.
	if command.from_user.id in config.USERS:
		
		# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.add(types.KeyboardButton('–ü–æ–≥–æ–¥–∞ —É –º–µ–Ω—è', request_location=True))
		
		# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		bot.send_message(command.chat.id,
		                 f"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, <b>{command.from_user.first_name}</b> !
–Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –ø–æ–≥–æ–¥–µ.
–î–ª—è —ç—Ç–æ–≥–æ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–æ–¥–∞ —É –º–µ–Ω—è" –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞.

<i>–ï—Å–ª–∏ –ø–æ—à–ª–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –º–æ–µ–º—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—É</i> => <b>@KOT_B_TPYCAX</b>""",
		                 parse_mode="HTML", reply_markup=keyboard)
	
	# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞—Å–∑—Ä–µ—à–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ, —Ç–æ –±–æ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ—Ç –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ
	# –∏ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞ –∏–ª–∏ —Ç–æ–º—É, –∫–æ–≥–æ —É–∫–∞–∂—É—Ç
	else:
		bot.send_message(command.from_user.id,
		                 f"""–ü—Ä–∏–≤–µ—Ç, <b>{command.from_user.first_name}</b>!
–Ø –∑–∞–∫—Ä—ã—Ç –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –º–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–æ–µ–º—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—É => <b>@KOT_B_TPYCAX</b>""",
		                 parse_mode="HTML")
		bot.send_message(config.ADMIN,
		                 f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *{command.from_user.first_name}*,
—Å ID _{command.from_user.id}_ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö""",
		                 parse_mode="Markdown")


# –û—Ç–¥–∞–µ–º –ø–æ–≥–æ–¥—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
@bot.message_handler(content_types=['text', 'location'])
def send_weather(city):
	if city.from_user.id in config.USERS:
		inline_keyboard = types.InlineKeyboardMarkup()
		now_in_city = manager
		data = None
		
		# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞ (–Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≥–æ—Ä–æ–¥–∞, –æ–ø–µ—á–∞—Ç–∫–∏ –∏ –ø—Ä–æ—á–µ–µ)
		try:
			
			# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
			if city.text:
				now_in_city = now_in_city.weather_at_place(city.text)
				data = city.text
			
			# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥–∞–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
			elif city.location:
				if city.location is not None:
					now_in_city = now_in_city.weather_at_coords(city.location.latitude, city.location.longitude)
					data = str([city.location.latitude, city.location.longitude])
			inline_keyboard.add(types.InlineKeyboardButton('–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è', callback_data=data))
			now_information = [
				{'weather': {'current_weather': now_in_city.weather.detailed_status,
				             'humidity': now_in_city.weather.humidity,
				             'wind': now_in_city.weather.wind('meters_sec')['speed']}},
				{'temp': {'now_temp': int(now_in_city.weather.temperature('celsius')['temp']),
				          'feeling': int(now_in_city.weather.temperature('celsius')['feels_like'])}},
				{'sun': {'sunrise': datetime.fromtimestamp(now_in_city.weather.sunrise_time(
					timeformat='unix')).strftime('%H:%M:%S'),
				         'sunset': datetime.fromtimestamp(now_in_city.weather.sunset_time(
					         timeformat='unix')).strftime('%H:%M:%S')}}
			]
			# –õ–æ–∫–∞–ª–∏–∑—É–µ–º —Å—Ç–∞—Ç—É—Å—ã –ø–æ–≥–æ–¥—ã
			if now_information[0]['weather']['current_weather'] == 'Clouds':
				now_information[0]['weather']['current_weather'] = '–û–±–ª–∞—á–Ω–æ ‚òÅ'
			elif now_information[0]['weather']['current_weather'] == 'Clear':
				now_information[0]['weather']['current_weather'] = '–Ø—Å–Ω–æ ‚òÄ'
			elif now_information[0]['weather']['current_weather'] == 'Rain':
				now_information[0]['weather']['current_weather'] = '–ö–∞–ø–∞–µ—Ç –¥–æ–∂–¥—å ‚òî'
			elif now_information[0]['weather']['current_weather'] == 'Snow':
				now_information[0]['weather']['current_weather'] = '–ü–∞–¥–∞–µ—Ç —Å–Ω–µ–≥ ‚ùÑ'
			elif now_information[0]['weather']['current_weather'] == 'Wind':
				now_information[0]['weather']['current_weather'] = '–í–µ—Ç—Ä–µ–Ω–Ω–æ üí®'
			elif now_information[0]['weather']['current_weather'] == 'Fog':
				now_information[0]['weather']['current_weather'] = '–¢—É–º–∞–Ω üå´'
			elif now_information[0]['weather']['current_weather'] == 'Haze':
				now_information[0]['weather']['current_weather'] = '–ú–≥–ª–∞ üåö'
			
			# –î–æ–±–∞–≤–ª—è–µ–º –º–Ω–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
			opinion = ''
			if now_information[1]['temp']['now_temp'] <= -21:
				opinion = '–æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ ü•∂'
			elif -20 <= now_information[1]['temp']['now_temp'] <= -16:
				opinion = '—Ö–æ–ª–æ–¥–Ω–æ üß£'
			elif -15 <= now_information[1]['temp']['now_temp'] <= -1:
				opinion = '–∑–∏–º–æ–≤–∞—Ç–æ ‚ùÑ'
			elif 0 <= now_information[1]['temp']['now_temp'] <= 8:
				opinion = '—Ö–æ–ª–æ–¥–Ω–æ–≤–∞—Ç–æ'
			elif 9 <= now_information[1]['temp']['now_temp'] <= 12:
				opinion = '–ø—Ä–æ—Ö–ª–∞–¥–Ω–æ üòï'
			elif 13 <= now_information[1]['temp']['now_temp'] <= 20:
				opinion = '—Ö–æ—Ä–æ—à–æ üëç'
			elif 21 <= now_information[1]['temp']['now_temp'] <= 24:
				opinion = '—Ç–µ–ø–ª–æ üèñ'
			elif now_information[1]['temp']['now_temp'] >= 25:
				opinion = '–∂–∞—Ä–∞ üî•'
			
			# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É
			bot.send_message(city.chat.id, f"""–ó–¥–µ—Å—å {opinion}

–ü–û–ì–û–î–ù–´–ï –£–°–õ–û–í–ò–Ø:

–ù–∞ —É–ª–∏—Ü–µ: {now_information[0]['weather']['current_weather']}
–í–ª–∞–∂–Ω–æ—Å—Ç—å: {now_information[0]['weather']['humidity']} % üí¶
–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {now_information[0]['weather']['wind']} –º/—Å üå¨

–¢–ï–ú–ü–ï–†–ê–¢–£–†–ê:

–°–µ–π—á–∞—Å: *{now_information[1]['temp']['now_temp']} ‚ÑÉ*
–ß—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –∫–∞–∫: {now_information[1]['temp']['feeling']} ‚ÑÉ

–°–û–õ–ù–¶–ï:

–í–æ—Å—Ö–æ–¥: {now_information[2]['sun']['sunrise']} ‚Üó
–ó–∞–∫–∞—Ç: {now_information[2]['sun']['sunset']} ‚Üò""",
			                 parse_mode="Markdown",
			                 reply_to_message_id=city.message_id,
			                 reply_markup=inline_keyboard)
		except Exception as e:
			e = city.text
			bot.send_message(city.chat.id, f"""*{city.from_user.first_name}* , –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –≤–≤–µ–ª–∏ _{e}_ - —ç—Ç–æ
–Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≥–æ—Ä–æ–¥ –∏–ª–∏ —è –µ–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ –∑–Ω–∞—é.
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.""",
			                 parse_mode="Markdown")
	else:
		bot.send_message(city.from_user.id,
		                 f"""–ü—Ä–∏–≤–µ—Ç, <b>{city.from_user.first_name}</b>!
–Ø –∑–∞–∫—Ä—ã—Ç –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –º–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–æ–µ–º—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—É => <b>@KOT_B_TPYCAX</b>""",
		                 parse_mode="HTML")
		bot.send_message(config.ADMIN,
		                 f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *{city.from_user.first_name}*, —Å ID _{city.from_user.id}_
–Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö""",
		                 parse_mode="Markdown")


# –ü—Ä–∏–Ω–∏–º–∞–µ–º, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –æ—Ç–¥–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 3 –¥–Ω—è
@bot.callback_query_handler(func=lambda call: True)
def forecast(call):
	forecast_information = []
	
	# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –∑–∞–ø—Ä–æ—Å –∏–∑ inline –∫–Ω–æ–ø–∫–∏
	# –ï—Å–ª–∏ –±—ã–ª –∑–∞–ø—Ä–æ—Å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º, —Ç–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Å–ø–∏—Å–æ–∫ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —á–∏—Å–µ–ª
	if [x for x in call.data if re.findall(r"(\d)|(\.)", x)]:
		data = []
		for coord in re.sub(r"(\[)|(\')|(\])|(,)", "", call.data).split():
			data.append(float(coord))
		
		# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ API —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ —á–µ—Ä–µ–∑ requests –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, —Ç.–∫. –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ pyowm
		# –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
		forecast_url = f'http://api.openweathermap.org/data/2.5/forecast?' \
		               f'lat={data[0]}&lon={data[1]}'
	
	# –ò–Ω–∞—á–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
	else:
		forecast_url = f'http://api.openweathermap.org/data/2.5/forecast?' \
		               f'q={call.data}'
	req = requests.get(forecast_url, params=config.params)
	resp = req.json()['list']
	for item in resp:
		forecast_information.append({'date': datetime.fromtimestamp(item['dt']).strftime('%d.%m.%Y'),
		                             'time': datetime.strptime(item['dt_txt'], '%Y-%m-%d %H:%M:%S').strftime('%H:%M'),
		                             'current_temp': int(item['main']['temp']),
		                             'feeling': int(item['main']['feels_like']),
		                             'humidity': item['main']['humidity'],
		                             'pressure': item['main']['pressure'],
		                             'detailed_status': str(item['weather'][0]['description']).capitalize(),
		                             'speed': item['wind']['speed']})
	
	# –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏
	sorted_data = sorted(forecast_information,
	                     key=lambda d: (datetime.strptime(d['date'], '%d.%m.%Y'), d['time']))
	
	# –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É —Å —É–ª–æ–≤–∏–µ–º, —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
	# –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –¥–∞—Ç–µ
	finish_data = set()
	result = ''
	for i in sorted_data:
		if i['date'] not in finish_data:
			result += f"\n\n*{i['date']}* üëà\n"
			finish_data.add(i['date'])
		
		# –î–æ–±–∞–≤–ª—è–µ–º –∫ —Å—Ç–∞—Ç—É—Å–∞–º –æ –ø–æ–≥–æ–¥–µ –∏–∫–æ–Ω–∫–∏
		if i['detailed_status'] == '–û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏':
			i['detailed_status'] += ' ‚õÖ'
		elif i['detailed_status'] == '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å':
			i['detailed_status'] += ' ‚òÅ'
		elif i['detailed_status'] == '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å':
			i['detailed_status'] += ' üåß'
		elif i['detailed_status'] == '–ù–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å':
			i['detailed_status'] += ' ‚òÅ'
		elif i['detailed_status'] == '–Ø—Å–Ω–æ':
			i['detailed_status'] += ' ‚òÄ'
		elif i['detailed_status'] == '–Ø—Å–Ω–æ':
			i['detailed_status'] += ' ‚òÄ'
		elif i['detailed_status'] == '–ü–∞—Å–º—É—Ä–Ω–æ':
			i['detailed_status'] += ' üå•'
		
		result += f"""\n–í—Ä–µ–º—è: {i['time']}
–°—Ç–∞—Ç—É—Å: {i['detailed_status']}
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {str(i['current_temp'])} ‚ÑÉ
–í–ª–∞–∂–Ω–æ—Å—Ç—å: {i['humidity']} %
–î–∞–≤–ª–µ–Ω–∏–µ: {i['pressure']} –º–º
–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {i['speed']} –º/—Å
"""
	# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º –ø–æ–≥–æ–¥—ã –Ω–∞ 3 –¥–Ω—è, –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
	bot.edit_message_text(chat_id=call.message.chat.id,
	                      text=result,
	                      message_id=call.message.message_id,
	                      parse_mode="Markdown")


# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
	bot.polling(none_stop=True)
